server:
  port: 8081

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/userservices
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver


  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  application:
    name: USER-SERVICE

  #    profiles:
  #      config: prod

  config:
    import: optional:configserver:http://localhost:9091

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-77584981.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oa7w65a24Px90yms5d7
            client-secret: JfsTTq0DW21uapbbhKjW42sGzjcNs86GN7WL5dfU
        provider:
          okta:
            issuer-uri: https://dev-77584981.okta.com/oauth2/default


#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka


#management:
#  health:
#    circuitbreaker:
#      enabled: true
#
#  endpoint:
#    health:
#      show-details: always
#    web:
#      exposure:
#        include: health



management:
  health:
    circuitbreaker:
      enabled: true

  endpoints:
    web:
      exposure:
        include: health,info

  endpoint:
    health:
      show-details: always



resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED


  retry:
    instances:
      ratingHotelService:
        maxAttempts: 3
        waitDuration: 5s

  ratelimiter:
    instances:
      userRateLimiter:
        limitRefreshPeriod: 4s
        limitForPeriod: 2
        timeoutDuration: 0s



logging:
  level:
    io.github.resilience4j.ratelimiter: DEBUG


okta:
  oauth2:
    issuer: https://dev-77584981.okta.com/oauth2/default
    audience: api://default